import { Navigate, Route, Routes } from "react-router-dom";
import { useTypedDispatch, useTypedSelector } from "./utility/hooks";
import CallInProgressPage from "./view/pages/CallInProgressPage";
import IncomingCallPage from "./view/pages/IncomingCallPage";
import WaitingCallPage from "./view/pages/WaitingCallPage";

import { Col, Row } from "react-bootstrap";
import Sidebar from "./view/components/sidebar/Sidebar";
import LoginPage from "./view/pages/LoginPage";
import TechnicianDetailsPage from "./view/pages/TechnicianDetailsPage";
import FourOFourPage from "./view/pages/misc/404Page";
import NotAuthorizedPage from "./view/pages/misc/NotAuthorizedPage";

function App() {
  const dispatch = useTypedDispatch();
  const { incomingCall, acceptedCall, inProgressCall } = useTypedSelector(
    (state) => state.callStates
  );
  const { isAuthenticated, technician } = useTypedSelector(
    (state) => state.auth
  );

  /* 
  const states : Uint16Array = new Uint16Array([0x01, 0x03, 0x10, 0x00, 0x08, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x9C])
  const alarms = new Uint16Array([0x01, 0x03, 0x10, 0x80, 0x20, 0x00, 0x01, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB6, 0xE5])
  //const measures = new Uint16Array([0x01, 0x03, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xA0, 0x0F, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,0x00 ,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x54, 0x62])
  const measures = new Uint16Array([0x01, 0x03, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,0x00 ,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x54, 0x62])
  const mcmt = new Uint16Array([0x01, 0x03, 0x0A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x15, 0x35]) 
  */

  /* const states = "0103100008000300000000000000000000000E99C"
  const alarms = "01031080200001000015000000000000000000B6E5"
  const measures = "0103A000000000000000000000000000000000000000000000000000000000000001540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ,0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400005462"
  const mcmt = "01030AFFFFFFFFFFFFFFFFFFFF1535" */

  if (!isAuthenticated) return <LoginPage />;

  if (incomingCall)
    return (
      <>
        <Row>
          <Col sm="3">
            <Sidebar />
          </Col>
          <Col>
            <IncomingCallPage />
          </Col>
        </Row>
      </>
    );

  return (
    <Row className="w-100 bg-whitesmoke mx-0">
      <Col sm="3">
        <Sidebar />
      </Col>
      <Col>
        <Routes>
          <Route path="" element={<Navigate to="/dashboard" />} />

          <Route
            path="/dashboard"
            element={
              acceptedCall ? <CallInProgressPage /> : <WaitingCallPage />
            }
          />
          <Route path="/login" element={<Navigate to="/dashboard" />} />
          <Route
            path="/technician-details"
            element={<TechnicianDetailsPage />}
          />

          <Route
            path="*"
            element={
              isAuthenticated ? <FourOFourPage /> : <NotAuthorizedPage />
            }
          />
        </Routes>
      </Col>
    </Row>
  );
}

export default App;
